name: push

on: # yamllint disable-line rule:truthy
  push: null
  pull_request: null

permissions:
  actions: read
  attestations: none
  checks: none
  contents: read
  deployments: none
  id-token: none
  issues: none
  discussions: none
  packages: write
  pages: none
  pull-requests: read
  repository-projects: none
  security-events: none
  statuses: write

jobs:
  codespell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: codespell-project/actions-codespell@v2
        with:
          check_filenames: true
  super-linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: ln -sv .github/linters/commitlint.config.js ./
      - uses: super-linter/super-linter/slim@v7.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: ${{ !contains(github.event_name, 'pull_request') }}
          VALIDATE_GO: false
  gofumpt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
      - run: |
          PATH="$PATH:$(go env GOPATH)/bin"
          export PATH
          go install mvdan.cc/gofumpt@latest
          if gofumpt -l -e . | grep '^' -q; then exit 1; fi
  go-channel-closure:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: test "$(grep -Erc --exclude-dir=".git*" 'make\(chan\s')" = "$(grep -Erc --exclude-dir=".git*" '\sclose\(')"
  go-http-body-closure:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: test "$(grep -rc --exclude-dir=".git*" 'http.Get(\|http.Head(\|http.DefaultClient.Do(')" = "$(grep -rc --exclude-dir=".git*" '.Body.Close()')"
  go-monkey-unpatch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: test "$(grep -cr 'defer gomonkey\.')" = "$(grep -cr 'Reset()$')"
  test:
    runs-on: ubuntu-latest
    needs:
      [
        codespell,
        super-linter,
        gofumpt,
        go-channel-closure,
        go-http-body-closure,
        go-monkey-unpatch,
      ]
    if: success()
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
      - run: |
          echo Testing...
          go test -v -timeout 30s ./...
          echo Checking coverage...
          go test -v -timeout 30s -cover ./... | grep -E '[1-9]{1}[0-9]{1}.[0-9]+%' && exit 1 || echo ok
        env:
          XDG_MUSIC_DIR: /tmp
  notify:
    needs: [test]
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            docs:
              - 'docs/**'
      - uses: peter-evans/repository-dispatch@v3
        if: steps.filter.outputs.docs == 'true'
        with:
          token: ${{ secrets.REPOSITORY_DISPATCH_STREAMBINDER }}
          repository: streambinder/streambinder
          event-type: doc-sync
          client-payload: '{"repo": "${{ github.repository }}", "ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
  benchmark:
    runs-on: ubuntu-latest
    needs: [test]
    if: success()
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
      - run: go test -benchmem -bench '^Benchmark.*$' ./... | grep ^Benchmark
  build:
    runs-on: ubuntu-latest
    needs: [test]
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          secrets: |
            SPOTIFY_ID=${{ secrets.SPOTIFY_ID }}
            SPOTIFY_KEY=${{ secrets.SPOTIFY_KEY }}
            GENIUS_TOKEN=${{ secrets.GENIUS_TOKEN }}
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          tags: ghcr.io/streambinder/spotitube:latest
          push: ${{ github.event_name != 'pull_request' }}
